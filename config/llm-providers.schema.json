{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "LLM Providers Configuration Schema",
  "description": "Schema for validating multi-provider LLM configuration",
  "type": "object",
  "required": ["llm"],
  "properties": {
    "llm": {
      "type": "object",
      "required": ["defaultProvider", "fallbackChain", "classifier", "prompt", "providers"],
      "properties": {
        "defaultProvider": {
          "type": "string",
          "description": "Default LLM provider to use",
          "enum": ["ollama", "openrouter", "groq", "huggingface", "together"]
        },
        "fallbackChain": {
          "type": "array",
          "description": "Ordered list of providers to try if primary fails",
          "items": {
            "type": "string",
            "enum": ["ollama", "openrouter", "groq", "huggingface", "together"]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "timeout": {
          "type": "integer",
          "description": "Request timeout in milliseconds",
          "minimum": 1000,
          "maximum": 300000,
          "default": 30000
        },
        "maxRetries": {
          "type": "integer",
          "description": "Maximum number of retry attempts",
          "minimum": 0,
          "maximum": 10,
          "default": 3
        },
        "retryDelay": {
          "type": "integer",
          "description": "Delay between retry attempts in milliseconds",
          "minimum": 100,
          "maximum": 10000,
          "default": 1000
        },
        "rateLimit": {
          "$ref": "#/definitions/RateLimit"
        },
        "classifier": {
          "type": "object",
          "description": "LLM configuration specifically for input classification",
          "required": ["provider", "model"],
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider to use for classification",
              "enum": ["ollama", "openrouter", "groq", "huggingface", "together"]
            },
            "model": {
              "type": "string",
              "description": "Model name for classification tasks"
            },
            "temperature": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "default": 0.1,
              "description": "Low temperature for consistent classification"
            },
            "maxTokens": {
              "type": "integer",
              "minimum": 50,
              "maximum": 1000,
              "default": 200,
              "description": "Max tokens for classification response"
            }
          },
          "additionalProperties": false
        },
        "prompt": {
          "type": "object",
          "description": "LLM configuration for user prompts and conversations",
          "required": ["currentModel", "availableModels"],
          "properties": {
            "currentModel": {
              "type": "string",
              "description": "Currently selected model for prompts (user-changeable)"
            },
            "availableModels": {
              "type": "array",
              "description": "Models available for user selection",
              "items": {
                "type": "string"
              },
              "minItems": 1
            },
            "defaultProvider": {
              "type": "string",
              "description": "Default provider for prompt processing",
              "enum": ["ollama", "openrouter", "groq", "huggingface", "together"]
            }
          },
          "additionalProperties": false
        },
        "providers": {
          "type": "object",
          "description": "Configuration for each LLM provider",
          "properties": {
            "ollama": {
              "$ref": "#/definitions/Provider"
            },
            "openrouter": {
              "$ref": "#/definitions/Provider"
            },
            "groq": {
              "$ref": "#/definitions/Provider"
            },
            "huggingface": {
              "$ref": "#/definitions/Provider"
            },
            "together": {
              "$ref": "#/definitions/Provider"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "strategies": {
      "type": "object",
      "description": "Model selection strategies",
      "properties": {
        "cost": {
          "$ref": "#/definitions/Strategy"
        },
        "speed": {
          "$ref": "#/definitions/Strategy"
        },
        "quality": {
          "$ref": "#/definitions/Strategy"
        },
        "local": {
          "$ref": "#/definitions/Strategy"
        }
      },
      "additionalProperties": false
    },
    "monitoring": {
      "type": "object",
      "description": "Monitoring and observability configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "metrics": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "collectTokenUsage": {
              "type": "boolean",
              "default": true
            },
            "collectLatency": {
              "type": "boolean",
              "default": true
            },
            "collectErrorRates": {
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "logging": {
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "enum": ["debug", "info", "warn", "error"],
              "default": "info"
            },
            "includeRequestBody": {
              "type": "boolean",
              "default": false
            },
            "includeSensitiveData": {
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false
        },
        "healthChecks": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "interval": {
              "type": "integer",
              "minimum": 30000,
              "maximum": 3600000,
              "default": 300000
            },
            "timeout": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 30000,
              "default": 5000
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "environment": {
      "type": "object",
      "description": "Environment variable configuration",
      "properties": {
        "variables": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^[A-Z][A-Z0-9_]*$"
              },
              "required": {
                "type": "boolean",
                "default": false
              },
              "default": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "security": {
      "type": "object",
      "description": "Security configuration",
      "properties": {
        "apiKeyRotation": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "interval": {
              "type": "integer",
              "minimum": 86400000,
              "maximum": 31536000000,
              "default": 2592000000
            }
          },
          "additionalProperties": false
        },
        "requestValidation": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "maxPromptLength": {
              "type": "integer",
              "minimum": 100,
              "maximum": 100000,
              "default": 10000
            },
            "sanitizeInput": {
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "auditLogging": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "logRequests": {
              "type": "boolean",
              "default": true
            },
            "logResponses": {
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Provider": {
      "type": "object",
      "required": ["name", "type", "enabled", "baseURL", "models"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable provider name"
        },
        "type": {
          "type": "string",
          "enum": ["local", "api"],
          "description": "Provider type - local or API-based"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether this provider is enabled"
        },
        "baseURL": {
          "type": "string",
          "format": "uri",
          "description": "Base URL for the provider API"
        },
        "apiKey": {
          "type": "string",
          "description": "API key (can include environment variable reference)"
        },
        "models": {
          "type": "array",
          "description": "Available models for this provider",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "minItems": 1
        },
        "authentication": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["bearer", "api-key", "none"]
            },
            "headerName": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "rateLimit": {
          "$ref": "#/definitions/RateLimit"
        },
        "healthCheck": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "endpoint": {
              "type": "string"
            },
            "interval": {
              "type": "integer",
              "minimum": 30000,
              "maximum": 3600000
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "Model": {
      "type": "object",
      "required": ["name", "displayName", "maxTokens", "contextWindow", "capabilities"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Model identifier used in API calls"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable model name"
        },
        "maxTokens": {
          "type": "integer",
          "minimum": 256,
          "maximum": 131072,
          "description": "Maximum tokens the model can generate"
        },
        "contextWindow": {
          "type": "integer",
          "minimum": 512,
          "maximum": 2097152,
          "description": "Maximum context window size"
        },
        "capabilities": {
          "type": "array",
          "description": "Model capabilities",
          "items": {
            "type": "string",
            "enum": ["completion", "chat", "reasoning", "code", "vision", "multilingual"]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "endpoint": {
          "type": "string",
          "description": "Specific endpoint for this model (for HuggingFace)"
        },
        "rateLimit": {
          "$ref": "#/definitions/RateLimit"
        },
        "defaultParameters": {
          "type": "object",
          "description": "Default parameters for this model",
          "properties": {
            "temperature": {
              "type": "number",
              "minimum": 0,
              "maximum": 2
            },
            "top_p": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "top_k": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "max_tokens": {
              "type": "integer",
              "minimum": 1,
              "maximum": 131072
            },
            "max_length": {
              "type": "integer",
              "minimum": 1,
              "maximum": 131072
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "RateLimit": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "requestsPerMinute": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000,
          "description": "Maximum requests per minute"
        },
        "tokensPerMinute": {
          "type": "integer",
          "minimum": 100,
          "maximum": 10000000,
          "description": "Maximum tokens per minute"
        }
      },
      "additionalProperties": false
    },
    "Strategy": {
      "type": "object",
      "required": ["priority"],
      "properties": {
        "priority": {
          "type": "array",
          "description": "Ordered list of providers by priority",
          "items": {
            "type": "string",
            "enum": ["ollama", "openrouter", "groq", "huggingface", "together"]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "fallback": {
          "type": ["boolean", "array"],
          "description": "Enable fallback or specify fallback providers",
          "items": {
            "type": "string",
            "enum": ["ollama", "openrouter", "groq", "huggingface", "together"]
          }
        }
      },
      "additionalProperties": false
    }
  }
}